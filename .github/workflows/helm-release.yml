name: Test and Release GitFence Helm Chart

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'oci/gitfence/**'
      - '.github/**'
  pull_request:
    paths-ignore:
      - 'oci/gitfence/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  lint-test:
    name: Lint and Test gitfence Helm Chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.13.1

      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        env:
          CT_TARGET_BRANCH: main
          CT_CHART_DIRS: "./"
        run: |
          changed=$(ct list-changed)
          if [[ ! -n "$changed" ]]; then
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Run chart-testing (lint)
        env:
          CT_TARGET_BRANCH: main
          CT_CHART_DIRS: "./"
          CT_CHARTS: ./
          CT_CHART_YAML_SCHEMA: "templates/ct-lint/chart_schema.yaml"
          CT_LINT_CONF: "templates/ct-lint/lintconf.yaml"
        run: ct lint

      - name: Create kind cluster
        uses: helm/kind-action@v1.9.0
        if: ${{ env.CHANGED != 'true' }}

      - name: Run chart-testing (install)
        if: ${{ env.CHANGED != 'true' }}
        env:
          CT_TARGET_BRANCH: main
          CT_CHART_DIRS: "./"
          CT_CHARTS: ./
          CT_NAMESPACE: flux-system
          CT_HELM_EXTRA_ARGS: "--create-namespace"
        run: ct install

  release:
    name: Release gitfence Helm Chart
    needs: lint-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@gmail.com"

      - name: Check for gh-pages branch
        run: |
          git ls-remote --exit-code --heads origin gh-pages

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.7.0

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_OWNER: "$GITHUB_ACTOR"
          #CR_CHARTS_REPO: "$GITHUB_REPOSITORY"
          CR_CHARTS_REPO: "https://$GITHUB_ACTOR.github.io/gitfence"
          # CR_CHARTS_REPO: "https://raw.githubusercontent.com/$GITHUB_ACTOR/gitfence/gh-pages/"
          CR_GIT_REPO: gitfence
          #CR_PACKAGE_PATH: ".cr-release-packages"
          #CR_INDEX_PATH: ".cr-index/index.yaml"
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          #CR_GIT_BASE_URL: "$GITHUB_API_URL"
          #CR_GIT_UPLOAD_URL: "https://uploads.github.com/"
          CR_SKIP_EXISTING: true
        with:
          charts_dir: "./"
