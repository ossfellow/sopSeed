name: Build Multi-Platform OCI Images

on:
  schedule:
    - cron: '11 1 1 * *'
  push:
    branches:
      - main
    paths:
      - 'oci/gitfence/Dockerfile'
  workflow_dispatch:

jobs:
  build:
    name: "Build ${{ matrix.image.name }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: masoudbahar/gitfence
            path: oci/gitfence
            platforms: linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8
            publish-on-ghcr: true
            publish-on-dickerhub: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v3.4.1
        with:
          images: ${{ matrix.image.name }},ghcr.io/${{ matrix.image.name }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=semver,pattern={{version}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v1.5.1

      - name: Login to GitHub Container Registry
        if: ${{ matrix.image.publish-on-ghcr }}
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Login to DockerHub
        if: ${{ matrix.image.publish-on-dockerhub }}
        uses: docker/login-action@v1.10.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          logout: true

      - name: Build and push
        uses: docker/build-push-action@v2.6.1
        with:
          context: ${{ matrix.image.path }}
          platforms: ${{ matrix.image.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            LICENSE=${{ github.event.repository.license.spdx_id }}
            VCS_URL=${{ github.event.repository.html_url }}
            VCS_REF=${GITHUB_SHA::8}
            BUILD_DATE=${{ steps.date.outputs.date }}
          push: true

      - name: Update repo description
        if: ${{ matrix.image.publish-on-dockerhub }}
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ matrix.image.name }}
          short-description: 'An OCI image, for creating and managing GPG and Age keys'
          readme-filepath: ./oci/gitfence/IMAGE.md
