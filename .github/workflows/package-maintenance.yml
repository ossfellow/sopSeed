name: Cleanup Old OCI Images

on:
  schedule:
    - cron: "0 0 30 3,6,9,12 *"
  workflow_dispatch: # Allow manual runs

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Run cleanup script
        run: |
          USERNAME="ossfellow"
          REPO="sopseed"
          TOKEN="${{ secrets.GITHUB_TOKEN }}"
          echo "Fetching package versions..."
          PACKAGES=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${TOKEN}" \
            "https://api.github.com/user/packages/container/${REPO}/versions")

          if [ -z "$PACKAGES" ] || [ "$PACKAGES" = "null" ]; then
            echo "No packages found or error in API response"
            exit 0
          fi

          echo "Processing versions..."
          # Debug: Print the structure of the first package
          echo "API Response Structure:"
          echo "${PACKAGES}" | jq '.[0]'

          # Modified version parsing - removing metadata path since it seems to be different
          VERSIONS=$(echo ${PACKAGES} | jq -r '.[] | select(.tags != null) | [.id, (.tags[0] // "latest"), .created_at] | @tsv')
          if [ -z "$VERSIONS" ]; then
            echo "No versions to process"
            exit 0
          fi

          TO_DELETE=$(echo "${VERSIONS}" | sort -k3r | tail -n +4 | awk '{print $1}')
          echo "Will delete all versions except the 3 most recent..."

          for VERSION in ${TO_DELETE}; do
            echo "Deleting version ${VERSION}..."
            RESPONSE=$(curl -X DELETE -s -o /dev/null -w "%{http_code}" \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${TOKEN}" \
              "https://api.github.com/user/packages/container/${REPO}/versions/${VERSION}")

            if [ "$RESPONSE" = "200" ]; then
              echo "Successfully deleted version ${VERSION}"
            else
              echo "Failed to delete version ${VERSION} (HTTP ${RESPONSE})"
            fi
          done
